workflows:
  android-production:
    name: Android Production Build
    instance_type: mac_mini_m2  # Technically, linux_x2 is cheaper but is not included in the free tier
    max_build_duration: 60
    environment:
      groups:
        - Production
      vars:
        EAS_PROFILE: production
        EAS_NO_VCS: "1"
      node: 18
      # Android signing configuration
      android_signing:
        - PiggusProd
    cache:
      cache_paths:
        - node_modules
        - .expo
        - .eas
    triggering:
      events:
        - push
      branch_patterns:
        - pattern: main
          include: true
    scripts:
      - name: Install dependencies
        script: npm install

      - name: Install EAS CLI
        script: npm install -g eas-cli

      - name: Debug authentication step by step
        script: |
          echo "=== Environment Check ==="
          echo "EXPO_TOKEN set: $([ -n "$EXPO_TOKEN" ] && echo "YES" || echo "NO")"
          echo "EXPO_TOKEN length: ${#EXPO_TOKEN}"
          echo "Working directory: $(pwd)"

          echo "=== EAS CLI Version ==="
          eas --version

          echo "=== Testing basic EAS auth ==="
          eas whoami || echo "eas whoami failed"

          echo "=== App.json content ==="
          cat app.json

      - name: Check EAS project status
        script: |
          echo "Checking EAS project configuration..."
          eas project:info
          echo "Current working directory: $(pwd)"
          echo "Checking for app.json/app.config.js..."
          ls -la app.json app.config.js 2>/dev/null || echo "No app config found"

      - name: Build Android locally
        script: EXPO_TOKEN=$EXPO_TOKEN eas build --local --platform android --profile $EAS_PROFILE

      - name: Upload Sentry sourcemaps (Android)
        script: |
          if [ -n "$SENTRY_AUTH_TOKEN" ]; then
            npx sentry-cli releases new "$CM_BUILD_ID-android"
            npx sentry-cli releases files "$CM_BUILD_ID-android" upload-sourcemaps ./ --rewrite --url-prefix "~/"
            npx sentry-cli releases finalize "$CM_BUILD_ID-android"
          else
            echo "SENTRY_AUTH_TOKEN not set, skipping sourcemap upload"
          fi

    artifacts:
      - build/**/*.apk
      - build/**/*.aab

    publishing:
      google_play:
        credentials: $GOOGLE_PLAY_SERVICE_ACCOUNT_CREDENTIALS
        track: internal  # Options: internal, alpha, beta, production
        submit_as_draft: false  # Creates draft for manual review before publishing
        release_promotion:
          track: production
          promote_as_draft: true

  ios-production:
    name: iOS Production Build
    instance_type: mac_mini_m2  # Required for iOS builds
    max_build_duration: 60
    integrations:
      app_store_connect: Codemagic Piggus
    environment:
      groups:
        - Production
      vars:
        EAS_PROFILE: production
        EAS_NO_VCS: "1"
      node: 18
      xcode: latest
      # iOS signing configuration
      ios_signing:
        distribution_type: app_store
        bundle_identifier: com.rebelpug.piggus
    cache:
      cache_paths:
        - node_modules
        - .expo
        - .eas
    triggering:
      events:
        - push
      branch_patterns:
        - pattern: main
          include: true
    scripts:
      - name: Install dependencies
        script: npm install

      - name: Install EAS CLI
        script: npm install -g eas-cli

      - name: Build iOS locally
        script: eas build --local --platform ios --profile $EAS_PROFILE

      - name: Upload Sentry sourcemaps (iOS)
        script: |
          if [ -n "$SENTRY_AUTH_TOKEN" ]; then
            npx sentry-cli releases new "$CM_BUILD_ID-ios"
            npx sentry-cli releases files "$CM_BUILD_ID-ios" upload-sourcemaps ./ --rewrite --url-prefix "~/"
            npx sentry-cli releases finalize "$CM_BUILD_ID-ios"
          else
            echo "SENTRY_AUTH_TOKEN not set, skipping sourcemap upload"
          fi

    artifacts:
      - ios/build/**/*.ipa

    publishing:
      app_store_connect:
        auth: integration  # You need to set up App Store Connect integration in Codemagic UI
        submit_to_testflight: true  # Automatic beta testing
        submit_to_app_store: false  # Manual App Store submission for production
